- @products.each do |p|
  .prod_cel{class: "prod_cel#{p.id}", style:"left: #{@hash[p.id]['point']}px; top: #{@hash[p.id]['top']}px; z-index: #{@hash[p.id]['zindex'];}",
            'data-id' => "prod_cel#{p.id}", 'data-aspect' => "#{@hash[p.id]['aspect']}"}
    %table.table-condensed.table-catalog-face{:role => "grid"}
      %tr
        %td
          .canvas-loader{style: "min-width: #{@size}px; min-height: #{@size * 4 / 3}px"}
            %a{href: "#{view_product_path(p)}", class: "btn-product cat-image-action", 'data-id' => "prod_cel#{p.id}"}
              = attachment_image_tag((p.picture_id && Image.find(p.picture_id)) || Image.new, :file, :fill, @size, (@size * 4 / 3), format: "jpeg", fallback: "default225x300.png", class: 'image_uploaded')
              %img{src: '/ajax-loading.gif', class: 'loader', alt: 'loading..', title: 'loading...'}
      %tr
        %td
          %table.table-condensed.table-catalog-face-label{:role => "grid"}
            %tr
              %td.cat-price
                %span.cat-price
                  = '$'+p.price_max.to_s
                %table.table-bordered.table-condensed.table-size-show{:role => "grid"}
                  %tr
                    - p.sizes.each do |s|
                      %td
                        = s.sign
            %tr
              %td.cat-color
                %table.table-condensed.table-product-color{:role => "grid", style: "position: absolute; bottom: #{@size/9}px; left: #{@size/45}px"}
                  %tr
                    - Gallery.where("galleries.product_id = '#{p.id}'").each do |g|
                      - if (!g.color_id.blank? && c = Color.find(g.color_id))
                        %td{:scope => "row"}
                          %a{href: '/#cat-product-image', id: "color-#{Image.where("images.gallery_id = #{g.id}").first.id}", title: "#{c.name}", class: 'gallery_color_chooser',
                             'data-id' => "prod_cel#{p.id}", 'data-src' => "#{attachment_url(Image.where("images.gallery_id = #{g.id}").first, :file, :fill, @size, (@size * 4 / 3), format: "jpeg", fallback: "default225x300.png")}"}
                            .color_square{style: "background-color: #{c.color_gid}; min-width: #{@size/9}px; min-height: #{@size/9}px"}
            %tr
              %td
                %a.btn.btn-start.btn-more.btn-product.animated.scroll.topbutton.fadeInUpBig{ href: "#{view_product_path(p)}", id:"#prod#{p.id}", 'data-id' => "prod_cel#{p.id}", class: "btn-more-#{p.id}"}
                  =t(:_furthermore)

